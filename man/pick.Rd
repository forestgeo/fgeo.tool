% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pick.R
\name{pick}
\alias{pick}
\title{Pick rows from a list of dataframes (e.g. a list of ForestGEO censuses).}
\usage{
pick(.data, ..., key = NULL)
}
\arguments{
\item{.data}{A list of dataframes with the same names and the same number of
rows and columns.}

\item{...}{Other arguments passed to methods.}

\item{key}{Dataframe used to check the conditions passed via \code{...}.}
}
\description{
This function allows you to pick rows from a \code{key} dataframe in a list
and pick the same row indices in all other non-key censuses. The conditions
to pick rows are checked against the \code{key} dataframe only. All dataframes
must have the same structure.
}
\examples{
censuses <- list(
  c1 = tibble(dbh = 1:2),
  c2 = tibble(dbh = 8:9)
)

censuses

pick(censuses, dbh == 1, key = "c1")

# Same because `key` defaults to the first element of the list
pick(censuses, dbh == 1)

# Different `key`
pick(censuses, dbh == 1, key = "c2")

# With multiple conditions passed via `...`
pick(censuses, dbh >= 1, dbh < 2)

# `pick()` is useful after reading multiple censuses into a list
rdata_files <- tool_example("rdata")
dir(rdata_files)

censuses <- rdata_list(rdata_files)
pick(censuses, dbh >= 100)

# Same in a pipeline
rdata_files \%>\%
  rdata_list() \%>\%
  pick(dbh >= 100)

}
\seealso{
Other general functions to pick or drop rows of a dataframe: \code{\link{drop_if_na}}
}
\concept{general functions to pick or drop rows of a dataframe}
