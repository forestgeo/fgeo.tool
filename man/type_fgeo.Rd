% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/read_fgeo.R
\name{type_fgeo}
\alias{type_fgeo}
\alias{type_vft}
\alias{type_taxa}
\title{Help to read ForestGEO data safely, with consistent column type.}
\usage{
type_vft()

type_taxa()
}
\value{
A list.
}
\description{
A common cause of problems is feeding functions with data which columns are
not all of the expected type. The problem often begins when reading data from
a text file with functions such as \code{\link[utils:read.csv]{utils::read.csv()}},
\code{\link[utils:read.delim]{utils::read.delim()}}, and friends -- which commonly guess wrongly the column
type that you more likely expect. These common offenders are strongly
discouraged; instead consider using \code{\link[readr:read_csv]{readr::read_csv()}}, \code{\link[readr:read_csv]{readr::read_csv()}},
and friends, which guess column types correctly much more often than their
analogs from the \strong{utils} package.

The functions \code{type_vft()}, \code{type_taxa()}, and friends help you to read data
more safely by explicitly specifying what type to expect from each column of
known datasets. These functions output the specification for the argument
\code{col_types()} of the functions \code{readr::read_*()}:
\itemize{
\item \code{type_vft():} Type specification for ViewFullTable.
\item \code{type_taxa():} Type specification for ViewFullTaxonomy.
}
}
\details{
Types reference (for more details see \code{\link[=read_delim]{read_delim()}}):
\itemize{
\item c = character,
\item i = integer,
\item n = number,
\item d = double,
\item l = logical,
\item D = date,
\item T = date time,
\item t = time,
\item ? = guess,
\item or _/- to skip the column.'.
}
}
\examples{
library(fgeo.x)
library(readr)

str(type_vft())
read_csv(x_example("vft_4quad.csv"), col_types = type_vft())

str(type_taxa())
read_csv(x_example("taxa.csv"), col_types = type_taxa())
}
\seealso{
\code{\link[readr:read_delim]{readr::read_delim()}}, \code{\link[readr:read_csv]{readr::read_csv()}}, \code{\link[=read_fgeo]{read_fgeo()}}.

Other functions to operate on column types: \code{\link{type_ensure}}

Other functions to read text files delivered by ForestgGEO's database: \code{\link{read_fgeo}}
}
\concept{functions to import/export ForestGEO data}
\concept{functions to operate on column types}
\concept{functions to read text files delivered by ForestgGEO's database}
\keyword{internal}
