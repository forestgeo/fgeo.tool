% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/nms_manipulate_names.R
\name{nms_tidy}
\alias{nms_tidy}
\title{Create tidy names that are lowercase and have no empty spaces.}
\usage{
nms_tidy(x)
}
\arguments{
\item{x}{A named object or a character string.}
}
\value{
A modified version of \code{x} with tidy names or a string of tidy names.
}
\description{
These functions create tidy names that are lowercase and have no empty
spaces. \code{nms_tidy()} tidies the names of named objects. Unnamed strings are
also tidied via \code{to_tidy_names()}. \code{to_tidy_names()} tidies a string -- not
its names.
}
\examples{
messy <- "Hi yOu"

# With unnamed strings, both functions do the same
unnamed_string <- messy
names(messy)
nms_tidy(messy)
# Same
to_tidy_names(messy)

# WHY TWO FUNCTIONS?

messy_named_string <- c(`Messy Name` = messy)
# Targets names
nms_tidy(messy_named_string)
# Targets strings -- not its names
to_tidy_names(messy_named_string)

# Same output, but here `to_tidy_names()` better communicates intention.
dfm <- data.frame(1)
setNames(dfm, nms_tidy(messy))
setNames(dfm, to_tidy_names(messy))

# Makes more sense when operating on strings
setNames(list(1), to_tidy_names(messy))
# Makes more sense when operating on named objects
messy_list <- list(`Hi yOu` = 1)
nms_tidy(messy_list)
}
\seealso{
Other functions dealing with names: \code{\link{nms_extract_anycase}},
  \code{\link{nms_lowercase}},
  \code{\link{nms_restore_newvar}},
  \code{\link{nms_try_rename}}, \code{\link{nms}}

Other functions for developers: \code{\link{check_crucial_names}},
  \code{\link{extract_insensitive}},
  \code{\link{is_multiple}},
  \code{\link{nms_extract_anycase}},
  \code{\link{nms_lowercase}},
  \code{\link{nms_restore_newvar}},
  \code{\link{nms_try_rename}}, \code{\link{nms}},
  \code{\link{rename_matches}}
}
\concept{functions dealing with names}
\concept{functions for developers}
\keyword{internal}
