% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fgeo_habitat.R
\name{fgeo_habitat}
\alias{fgeo_habitat}
\title{Structure habitat data from measures of topography.}
\usage{
fgeo_habitat(elevation, gridsize, n, ...)
}
\arguments{
\item{elevation}{One of these:
\itemize{
\item A list with at least three elements: \code{col} containing
elevation data; and \code{xdim} and \code{ydim} giving plot dimensions; OR
\item A dataframe containing elevation data, in which
case the parameters \code{xdim} and \code{ydim} must be provided. It may be the
element \code{col} of a ForestGEO elevation-list or an object of class
fgeo_elevation (see \code{\link[=fgeo_elevation]{fgeo_elevation()}}).
}}

\item{gridsize}{Number giving the size of each quadrat for which a habitat
is calculated. Commonly, \code{gridsize = 20}.}

\item{n}{Integer. Number of cluster-groups to construct (passed to the
argument \code{k} to \code{\link[stats:cutree]{stats::cutree()}}).}

\item{...}{Arguments passed to \code{\link[=fgeo_topography]{fgeo_topography()}}.}
}
\value{
A dataframe of subclass fgeo_habitat, with columns \code{gx} and \code{gy},
rounded with accuracy determined by \code{gridsize}, and column \code{habitats}, with
as many distinct integer values as determined by the argument \code{n}.
}
\description{
This function constructs habitat data based on elevation data. It calculates
habitats in two steps:
\enumerate{
\item It calculates mean elevation, convexity and slope for each quadrat (via
\code{\link[=fgeo_topography]{fgeo_topography()}})).
\item It calculates habitats based on hierarchical clustering of the topographic
metrics from step 1 (via \code{\link[stats:hclust]{stats::hclust()}}).
}
}
\section{Input}{

The main input can be either the elevation list that ForestGEO delivers, or
the element \code{col} of such list -- which is a dataframe containing the
elevation data. Notice that the required arguments vary according to the main
input (the elevation list or the elevation dataframe). Whatever the input,
the dataframe containing the elevation data must have columns \code{gx} and \code{gy}
or \code{x} and \code{y}.
}

\examples{
# Input a ForestGEO-like elevation list
elev_list <- fgeo.x::elevation
habs <- fgeo_habitat(elev_list, n = 4, gridsize = 20)
str(habs)

\dontrun{
installed <- requireNamespace("fgeo.map", quietly = TRUE)
if (installed) {
  library(fgeo.map)
  autoplot(habs)
}

# A good use of habitat data is for calculating species-habitat associations
installed <- requireNamespace("fgeo.analyze", quietly = TRUE)
if (installed) {
  library(fgeo.analyze)
  
  elev_list <- fgeo.x::elevation
  habitat <- fgeo_habitat(elev_list, gridsize = 20, n = 4)
  census <- fgeo.analyze::luquillo_top3_sp
  species <- unique(census$sp)
  to_df(tt_test(census, species, habitat))
}

# If working with elevation dataframe you must provide xdim and ydim
elev_df <- fgeo.x::elevation$col
hab2 <- fgeo_habitat(elev_df, gridsize = 20, n = 4, xdim = 320, ydim = 500)
str(hab2)
}
}
\seealso{
\code{\link[fgeo.map:autoplot.fgeo_habitat]{fgeo.map::autoplot.fgeo_habitat()}}, \code{\link[=fgeo_topography]{fgeo_topography()}}.

Other functions to construct fgeo classes: \code{\link{as_censuses}},
  \code{\link{fgeo_elevation}},
  \code{\link{fgeo_topography}}
}
\author{
Rick Condit.
}
\concept{functions to construct fgeo classes}
